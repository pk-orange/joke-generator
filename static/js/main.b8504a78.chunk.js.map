{"version":3,"sources":["Components/Header.js","Components/JokeDisplay.js","App.js","index.js"],"names":["Header","className","jokeArray","joke","punchline","Joke","cycle","punchLineData","punchLineDisplay","lineIndex","showPunchLine","displayText","buttonDisplay","jokeOutput","singleJokeLine","singlePunchLine","last","length","class","style","display","type","onClick","App","punchLineState","useState","setLineIndex","setPunchLineDisplay","setPunchLineData","index","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAUeA,MAVf,WACI,OACI,sBAAKC,UAAU,kCAAf,UACI,2CACA,mBAAGA,UAAU,oBAAb,sECJCC,EAAY,CACvB,CACEC,KAAM,8CACNC,UAAW,uCAEb,CACED,KAAM,0CACNC,UAAW,kBAEb,CACED,KAAM,wCACNC,UAAW,oCAEb,CACED,KAAM,8CACNC,UAAW,aAEb,CACED,KAAM,yCACNC,UAAW,UAEb,CACED,KAAM,wCACNC,UAAW,2BA4DAC,MAxDf,YAMI,IALFC,EAKC,EALDA,MAEAC,GAGC,EAJDC,iBAIC,EAHDD,eACAE,EAEC,EAFDA,UACAC,EACC,EADDA,cAEQC,EAA+BJ,EAA/BI,YAAaC,EAAkBL,EAAlBK,cAEfC,EAAaX,EAAUO,GAEvBK,EAAiBD,EAAWV,KAC5BY,EAAkBF,EAAWT,UAM7BY,EAJL,WACK,OAAOP,IAAcP,EAAUe,OAAS,GAGrB,aAAe,oBAMxC,OACE,mCACE,0BAASC,MAAM,iBAAf,UACE,qBAAKA,MAAM,OAAX,SACE,oBAAIA,MAAM,+BAAV,SAA0CJ,MAE5C,sBAAKI,MAAM,kCAAX,UACE,oBAAIA,MAAM,gCAAgCC,MAAO,CAAEC,QAAST,GAA5D,SAA4EI,IAC5E,wBACEM,KAAK,SACLH,MAAM,oBACNC,MAAO,CAAEC,QAASR,GAClBU,QAASZ,EAJX,2BASF,qBAAKQ,MAAM,0BAAX,SACE,wBACEG,KAAK,SACLH,MAAM,oBACNC,MAAO,CAAEC,QAAST,GAClBW,QAAShB,EAJX,SAMGU,YC5BEO,MArCf,WACE,IAAMC,EAAiB,CACrBb,YAAa,OACbC,cAAe,SAIjB,EAAkCa,mBAAS,GAA3C,mBAAOhB,EAAP,KAAkBiB,EAAlB,KACA,EAAgDD,oBAAS,GAAzD,mBAAyBE,GAAzB,WACA,EAA0CF,mBAAS,eAAID,IAAvD,mBAAOjB,EAAP,KAAsBqB,EAAtB,KAeA,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEnB,UAAWA,EACXF,cAAeA,EACfD,MAnBN,WACMG,GAAa,IACfiB,GAAa,SAACG,GAAD,OAAWA,EAAQ,KAChCD,EAAiB,eAAKJ,MAiBpBd,cAbN,WACEiB,GAAoB,SAACG,GAAD,OAAYA,KAChCF,EAAiB,CAAEjB,YAAa,QAASC,cAAe,gBCzB5DmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b8504a78.chunk.js","sourcesContent":["function Header() {\n    return (\n        <div className=\"container-fluid text-center m-3\">\n            <h2>Dad Jokes</h2>\n            <p className=\"font-weight-light\"> \"A joke becomes a dad joke... when it's apparent!\"</p>\n        </div>\n        \n    )\n};\n\nexport default Header;","export const jokeArray = [\n  {\n    joke: \"Why does 'Where's Waldo' only wear stripes?\",\n    punchline: \"Cause he didn't want to be spotted!\",\n  },\n  {\n    joke: \"Who designed King Arthur's round table?\",\n    punchline: \"Sir-Cumference\",\n  },\n  {\n    joke: \"Why do astronomers hate Orion's Belt?\",\n    punchline: \"Cause it's a big waste of space!\",\n  },\n  {\n    joke: \"What do you call a mouse that swears a lot?\",\n    punchline: \"A cursor!\",\n  },\n  {\n    joke: \"What was the pig doing in the kitchen?\",\n    punchline: \"Bacon!\",\n  },\n  {\n    joke: \"Why was the strawberry late for work?\",\n    punchline: \"It was stuck in a jam!\",\n  },\n];\n\nfunction Joke({\n  cycle,\n  punchLineDisplay,\n  punchLineData,\n  lineIndex,\n  showPunchLine,\n}) {\n  const { displayText, buttonDisplay } = punchLineData;\n\n  const jokeOutput = jokeArray[lineIndex];\n\n  const singleJokeLine = jokeOutput.joke;\n  const singlePunchLine = jokeOutput.punchline;\n    \n   function stopAtEnd () {\n        return lineIndex === jokeArray.length - 1;\n    }\n    \n    let last = stopAtEnd ? \"Next joke!\" : \"That's all folks!\" ;\n\n\n  // let pending =\n  //     punchLineDisplay ? 'block' : 'none';\n\n  return (\n    <>\n      <section class=\"container w-25\">\n        <div class=\"pt-5\">\n          <h4 class=\"text-center font-weight-bold\">{singleJokeLine}</h4>\n        </div>\n        <div class=\"d-flex flex-column align-middle\">\n          <h3 class=\"text-center text-success mt-2\" style={{ display: displayText }}>{singlePunchLine}</h3>\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            style={{ display: buttonDisplay }}\n            onClick={showPunchLine}\n          >\n            PUNCH LINE\n          </button>\n        </div>\n        <div class=\"d-flex flex-column mt-3\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            style={{ display: displayText }}\n            onClick={cycle}\n          >\n            {last}\n          </button>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default Joke;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport Joke from \"./Components/JokeDisplay\";\nimport Buttons from \"./Components/Buttons\";\nimport { jokeArray } from \"./Components/JokeDisplay\";\n\n\n\n\nfunction App() {\n  const punchLineState = {\n    displayText: 'none',\n    buttonDisplay: 'block',\n  }\n \n\n  const [lineIndex, setLineIndex] = useState(0);\n  const [punchLineDisplay, setPunchLineDisplay] = useState(false);\n  const [punchLineData, setPunchLineData] = useState({...punchLineState})\n\n  function cycle() {\n    if (lineIndex <= 4) {\n      setLineIndex((index) => index + 1);\n      setPunchLineData({ ...punchLineState })\n    }\n  }\n\n  function showPunchLine() {\n    setPunchLineDisplay((state) => !state);\n    setPunchLineData({ displayText: 'block', buttonDisplay: 'none' });\n  }\n\n\n  return (\n    <>\n      <Header />\n      <Joke\n        lineIndex={lineIndex}\n        punchLineData={punchLineData}\n        cycle={cycle}\n        showPunchLine={showPunchLine}/>\n      </>\n  )\n  \n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}